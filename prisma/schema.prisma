generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  transactions  Transaction[]
  budgets       Budget[]
  goals         Goal[]
  categories    Category[]
  logs          Log[]
}

model Transaction {
  id          String    @id @default(cuid())
  amount      Float
  type        TransactionType
  description String
  date        DateTime
  userId      String
  categoryId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  category    Category  @relation(fields: [categoryId], references: [id])
}

model Category {
  id           String    @id @default(cuid())
  name         String
  type         TransactionType
  createdById  String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  transactions Transaction[]
  createdBy    User      @relation(fields: [createdById], references: [id])
  budgets      Budget[]
}

model Budget {
  id          String   @id @default(uuid())
  userId      String   // Relaciona o orçamento ao usuário
  categoryId  String   // Categoria do orçamento
  amount      Decimal  // Valor do orçamento
  startDate   DateTime // Data de início
  endDate     DateTime // Data de término
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category    Category @relation(fields: [categoryId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
}

model Goal {
  id          String    @id @default(cuid())
  name        String
  targetAmount Float
  currentAmount Float    @default(0)
  deadline    DateTime
  userId      String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
}

model Log {
  id        String    @id @default(cuid())
  action    String
  details   String
  userId    String
  createdAt DateTime  @default(now())
  user      User      @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum TransactionType {
  RECEITA
  DESPESA
}